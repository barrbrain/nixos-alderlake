name: "NixOS Installation (alderlake)"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - run: cat /proc/cpuinfo
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-24.05
    - name: Configure nix-daemon
      run: |
        cp /etc/nix/nix.conf nix.conf
        echo 'system-features = benchmark big-parallel kvm nixos-test uid-range gccarch-x86-64-v3' |
          tee -a nix.conf
        echo 'substituters = https://cache.nixos.org http://nix.ba.rr-dav.id.au' |
          tee -a nix.conf
        echo 'trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix.ba-rr.dav.id.au:mN40uLqdT6zyCpfVSLl+wNZGNRrd5t/gEyJiL+tdgqc=' |
          tee -a nix.conf
        echo '${{ secrets.AWS_SIGNING_KEY }}' |
          sudo tee /etc/nix/key.private >/dev/null
        echo 'secret-key-files = /etc/nix/key.private' |
          tee -a nix.conf
        sudo cp upload-to-cache.sh /etc/nix/upload-to-cache.sh
        sudo sed -i 's#AWS_ACCESS_KEY_ID#&="${{ secrets.AWS_ACCESS_KEY_ID }}"#' /etc/nix/upload-to-cache.sh
        sudo sed -i 's#AWS_SECRET_ACCESS_KEY#&="${{ secrets.AWS_SECRET_ACCESS_KEY }}"#' /etc/nix/upload-to-cache.sh
        echo 'post-build-hook = /etc/nix/upload-to-cache.sh' |
          tee -a nix.conf
        sudo rm /etc/nix/nix.conf
        sudo mv nix.conf /etc/nix/nix.conf
        sudo systemctl restart nix-daemon.service
        chmod o+rx /home/runner
    - uses: dawidd6/action-download-artifact@v6
      with:
        workflow_conclusion: success
        if_no_artifact_found: warn
    - name: Dry-build NixOS
      id: dry-build
      run: |
        nix-channel --update
        nix-build --extra-substituters 'auto?trusted=1' '<nixpkgs/nixos>' \
          -A system -I nixos-config="$PWD/rootfs/etc/nixos/configuration.nix" \
          --dry-run 2>&1 | tee unfree.log
        sed -i '/UNFREE/d' rootfs/etc/nixos/configuration.nix
        nix-build --extra-substituters 'auto?trusted=1' '<nixpkgs/nixos>' \
          -A system -I nixos-config="$PWD/rootfs/etc/nixos/configuration.nix" \
          --dry-run 2>&1 | tee free.log
        grep -xFf unfree.log free.log | tr -d ' ' | grep '^/nix/store/.*\.drv$' > common.log
        COUNT=`wc -l < common.log`
        echo "Common derivations ($COUNT):"
        cat common.log
        if [ -f derivations/common.log ]
        then grep -xvFf derivations/common.log common.log > new.log || true
        else cp common.log new.log
        fi
        COUNT=`wc -l < new.log`
        echo "New derivations ($COUNT):"
        cat new.log
        echo "count=$COUNT" >> "$GITHUB_OUTPUT"
    - name: Free Disk Space (Ubuntu)
      if: steps.dry-build.outputs.count > 0
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        large-packages: false
    - name: Build NixOS
      if: steps.dry-build.outputs.count > 0
      run: |
          nix-build --extra-substituters 'auto?trusted=1' -j 2 -k -A system -Q \
            -I nixos-config="$PWD/rootfs/etc/nixos/configuration.nix" \
            `cat new.log`
    - uses: actions/upload-artifact@v4
      with:
        name: derivations
        path: common.log
